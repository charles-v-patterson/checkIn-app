{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./CheckInPage.css\";\n\n/*\r\nconst CheckInPage = () => {\r\n  const [checkInStatus, setCheckInStatus] = useState(\"Not Checked In\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Optional: Fetch initial check-in status on page load\r\n    const fetchCheckInStatus = async () => {\r\n      // ... (add logic to fetch status from your backend)\r\n    };\r\n    // fetchCheckInStatus();\r\n  }, []);\r\n\r\n  const handleCheckIn = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n\r\n      const response = await axios.post(\"/api/checkin\", {}, config);\r\n      setCheckInStatus(\"Checked In!\");\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      if (error.response && error.response.status === 401) {\r\n        // Handle unauthorized (e.g., redirect to login)\r\n        navigate(\"/login\");\r\n      } else {\r\n        setErrorMessage(\"Check-in failed. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkin-page-container\">\r\n      {\" \"}\r\n      {/* Add styling */ /*}\r\n                         <h1>Check-In</h1>\r\n                         {isLoading && <p>Checking in...</p>}\r\n                         {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n                         <p>{checkInStatus}</p>\r\n                         <button onClick={handleCheckIn} disabled={isLoading}>\r\n                         Check In\r\n                         </button>\r\n                         </div>\r\n                         );\r\n                         };\r\n                         export default CheckInPage;\r\n                         */","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate"],"sources":["C:/Users/CharlesPatterson/Documents/Coding-Projects/Monroe CIC IBM Check In App/checkin-app/frontend/src/components/checkIn/CheckInPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./CheckInPage.css\";\r\n\r\n\r\n/*\r\nconst CheckInPage = () => {\r\n  const [checkInStatus, setCheckInStatus] = useState(\"Not Checked In\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Optional: Fetch initial check-in status on page load\r\n    const fetchCheckInStatus = async () => {\r\n      // ... (add logic to fetch status from your backend)\r\n    };\r\n    // fetchCheckInStatus();\r\n  }, []);\r\n\r\n  const handleCheckIn = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n\r\n      const response = await axios.post(\"/api/checkin\", {}, config);\r\n      setCheckInStatus(\"Checked In!\");\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      if (error.response && error.response.status === 401) {\r\n        // Handle unauthorized (e.g., redirect to login)\r\n        navigate(\"/login\");\r\n      } else {\r\n        setErrorMessage(\"Check-in failed. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkin-page-container\">\r\n      {\" \"}\r\n      {/* Add styling */ /*}\r\n      <h1>Check-In</h1>\r\n      {isLoading && <p>Checking in...</p>}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <p>{checkInStatus}</p>\r\n      <button onClick={handleCheckIn} disabled={isLoading}>\r\n        Check In\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckInPage;\r\n*/ "],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,mBAAmB;;AAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAzCA,CAyCyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}