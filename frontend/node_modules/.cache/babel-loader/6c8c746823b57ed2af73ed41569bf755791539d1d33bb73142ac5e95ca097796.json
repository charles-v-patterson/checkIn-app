{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CharlesPatterson\\\\Documents\\\\Coding-Projects\\\\Monroe CIC IBM Check In App\\\\checkin-app\\\\frontend\\\\src\\\\components\\\\checkIn\\\\CheckInPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./CheckInPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckInPage = () => {\n  _s();\n  const [checkInStatus, setCheckInStatus] = useState(\"Not Checked In\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const [isAtWork, setIsAtWork] = useState(false);\n  const [location, setLocation] = useState(null);\n  const [workLocation, setWorkLocation] = useState(null);\n  const [hasCheckedIn, setHasCheckedIn] = useState(false);\n\n  /*\r\n  useEffect(() => {\r\n    const fetchCheckInStatus = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const config = {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        };\r\n          const response = await axios.get(\"/api/checkin/status\", config);\r\n        setCheckInStatus(response.data.status); // Adjust based on your API response\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 401) {\r\n          navigate(\"/login\");\r\n        } else {\r\n          setErrorMessage(\"Failed to fetch check-in status\");\r\n        }\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n      fetchCheckInStatus();\r\n  }, []); // Empty dependency array: fetch only on page load\r\n  */\n  useEffect(() => {\n    const fetchWorkLocation = async () => {\n      const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=150+Venable+Lane,+Monroe,+Louisiana&key=AIzaSyAPwjOR90GtwlHzTmqJjvzmZVyXgA1z4PY`);\n      const data = await response.json();\n      const location = data.results[0].geometry.location;\n      setWorkLocation(location);\n    };\n    fetchWorkLocation();\n    navigator.geolocation.getCurrentPosition(position => {\n      setLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    });\n  }, []);\n\n  /* \r\n   const handleCheckIn = async () => {\r\n     setIsLoading(true);\r\n  \n     try {\r\n       const token = localStorage.getItem(\"token\");\r\n       const config = {\r\n         headers: { Authorization: `Bearer ${token}` },\r\n       };\r\n  \n       const response = await axios.post(\"/api/checkin\", {}, config);\r\n       setCheckInStatus(\"Checked In!\");\r\n       setIsLoading(false);\r\n       if (location && workLocation) {\r\n         const distance = getDistanceFromLatLonInKm(\r\n           location.lat,\r\n           location.lng,\r\n           workLocation.lat,\r\n           workLocation.lng\r\n         );\r\n  \n         setHasCheckedIn(true);\r\n         setIsAtWork(distance < 1); // Consider user to be at work if they are less than 1 km away\r\n       }\r\n     } catch (error) {\r\n       setIsLoading(false);\r\n       if (error.response && error.response.status === 401) {\r\n         // Handle unauthorized (e.g., redirect to login)\r\n         navigate(\"/login\");\r\n       } else {\r\n         setErrorMessage(\"Check-in failed. Please try again.\");\r\n       }\r\n     }\r\n   };\r\n  */\n\n  // Function to calculate distance between two coordinates\n  const getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\n    var R = 6371; // Radius of the earth in km\n    var dLat = deg2rad(lat2 - lat1);\n    var dLon = deg2rad(lon2 - lon1);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c; // Distance in km\n    return d;\n  };\n  const deg2rad = deg => {\n    return deg * (Math.PI / 180);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkin-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"IBM Monroe CIC Work Check-in App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Checking in...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"location\",\n      children: [\"Current Location: \", JSON.stringify(location)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: checkInStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"checkin-button\",\n      onClick: handleCheckIn,\n      disabled: isLoading,\n      children: \"Check In Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), hasCheckedIn && (isAtWork ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status\",\n      children: \"You have been checked in and logged as working in the office today.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status\",\n      children: \"You have been checked in and logged as working remotely today.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckInPage, \"3ceDKMG0cDl+7VFeQrY3hywDCSU=\", false, function () {\n  return [useNavigate];\n});\n_c = CheckInPage;\nexport default CheckInPage;\nvar _c;\n$RefreshReg$(_c, \"CheckInPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","CheckInPage","_s","checkInStatus","setCheckInStatus","isLoading","setIsLoading","errorMessage","setErrorMessage","navigate","isAtWork","setIsAtWork","location","setLocation","workLocation","setWorkLocation","hasCheckedIn","setHasCheckedIn","fetchWorkLocation","response","fetch","data","json","results","geometry","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","d","deg","PI","className","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","onClick","handleCheckIn","disabled","_c","$RefreshReg$"],"sources":["C:/Users/CharlesPatterson/Documents/Coding-Projects/Monroe CIC IBM Check In App/checkin-app/frontend/src/components/checkIn/CheckInPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./CheckInPage.css\";\r\n\r\nconst CheckInPage = () => {\r\n  const [checkInStatus, setCheckInStatus] = useState(\"Not Checked In\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [isAtWork, setIsAtWork] = useState(false);\r\n  const [location, setLocation] = useState(null);\r\n  const [workLocation, setWorkLocation] = useState(null);\r\n  const [hasCheckedIn, setHasCheckedIn] = useState(false);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    const fetchCheckInStatus = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const config = {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        };\r\n\r\n        const response = await axios.get(\"/api/checkin/status\", config);\r\n        setCheckInStatus(response.data.status); // Adjust based on your API response\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 401) {\r\n          navigate(\"/login\");\r\n        } else {\r\n          setErrorMessage(\"Failed to fetch check-in status\");\r\n        }\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCheckInStatus();\r\n  }, []); // Empty dependency array: fetch only on page load\r\n*/\r\n  useEffect(() => {\r\n    const fetchWorkLocation = async () => {\r\n      const response = await fetch(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?address=150+Venable+Lane,+Monroe,+Louisiana&key=AIzaSyAPwjOR90GtwlHzTmqJjvzmZVyXgA1z4PY`\r\n      );\r\n      const data = await response.json();\r\n      const location = data.results[0].geometry.location;\r\n      setWorkLocation(location);\r\n    };\r\n\r\n    fetchWorkLocation();\r\n\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      setLocation({\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n\r\n\r\n  \r\n /* \r\n  const handleCheckIn = async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n\r\n      const response = await axios.post(\"/api/checkin\", {}, config);\r\n      setCheckInStatus(\"Checked In!\");\r\n      setIsLoading(false);\r\n      if (location && workLocation) {\r\n        const distance = getDistanceFromLatLonInKm(\r\n          location.lat,\r\n          location.lng,\r\n          workLocation.lat,\r\n          workLocation.lng\r\n        );\r\n\r\n        setHasCheckedIn(true);\r\n        setIsAtWork(distance < 1); // Consider user to be at work if they are less than 1 km away\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      if (error.response && error.response.status === 401) {\r\n        // Handle unauthorized (e.g., redirect to login)\r\n        navigate(\"/login\");\r\n      } else {\r\n        setErrorMessage(\"Check-in failed. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n*/\r\n\r\n  // Function to calculate distance between two coordinates\r\n  const getDistanceFromLatLonInKm = (lat1, lon1, lat2, lon2) => {\r\n    var R = 6371; // Radius of the earth in km\r\n    var dLat = deg2rad(lat2 - lat1);\r\n    var dLon = deg2rad(lon2 - lon1);\r\n    var a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos(deg2rad(lat1)) *\r\n        Math.cos(deg2rad(lat2)) *\r\n        Math.sin(dLon / 2) *\r\n        Math.sin(dLon / 2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    var d = R * c; // Distance in km\r\n    return d;\r\n  };\r\n\r\n  const deg2rad = (deg) => {\r\n    return deg * (Math.PI / 180);\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkin-page-container\">\r\n      <h1 className=\"title\">IBM Monroe CIC Work Check-in App</h1>\r\n      {isLoading && <p>Checking in...</p>}\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <p className=\"location\">Current Location: {JSON.stringify(location)}</p>\r\n      <p>{checkInStatus}</p>\r\n      <button\r\n        className=\"checkin-button\"\r\n        onClick={handleCheckIn}\r\n        disabled={isLoading}\r\n      >\r\n        Check In Now\r\n      </button>\r\n      {hasCheckedIn &&\r\n        (isAtWork ? (\r\n          <p className=\"status\">\r\n            You have been checked in and logged as working in the office today.\r\n          </p>\r\n        ) : (\r\n          <p className=\"status\">\r\n            You have been checked in and logged as working remotely today.\r\n          </p>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckInPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}